generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String             @id @default(uuid())
  name             String?
  email            String             @unique
  emailVerified    DateTime?
  image            String?
  createdAt        DateTime           @default(now())
  accounts         Account[]
  sessions         Session[]
  youtubeAccounts  YouTubeAccount[]
}

model Account {
  id                 String   @id @default(uuid())
  userId             String
  provider           String
  providerAccountId  String
  type               String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model YouTubeAccount {
  id            String   @id @default(uuid())
  userId        String
  channelId     String   @unique
  title         String
  thumbnailUrl  String?
  connectedAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ChannelMetric {
  id            String   @id @default(uuid())
  youtubeId     String   // references YouTubeAccount.channelId
  date          DateTime
  subscribers   Int
  views         Int
  watchTime     Int
  createdAt     DateTime @default(now())

  @@index([youtubeId, date])
}